/*
 * This source file was generated by the Gradle 'init' task
 */
package com.neverless;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import com.neverless.application.account.InMemoryAccountRepository;
import com.neverless.application.withdrawal.InMemoryWithdrawalRepository;
import com.neverless.application.withdrawal.WithdrawalCommandServiceImpl;
import com.neverless.application.withdrawal.WithdrawalQueryServiceImpl;
import com.neverless.domain.Amount;
import com.neverless.domain.account.AccountRepository;
import com.neverless.domain.withdrawal.WithdrawalCommandService;
import com.neverless.domain.withdrawal.WithdrawalQueryService;
import com.neverless.domain.withdrawal.WithdrawalRepository;
import com.neverless.integration.WithdrawalService;
import com.neverless.resources.Resources;
import io.javalin.Javalin;
import io.javalin.json.JavalinJackson;
import kotlin.NotImplementedError;

public class App {
    private final Javalin javalin;

    public App(WithdrawalService withdrawalService) {
        final AccountRepository accountRepo = new InMemoryAccountRepository();
        final WithdrawalRepository withdrawalRepository = new InMemoryWithdrawalRepository();
        final WithdrawalCommandService withdrawalCommandService = new WithdrawalCommandServiceImpl(withdrawalRepository, accountRepo, withdrawalService);
        final WithdrawalQueryService withdrawalQueryService = new WithdrawalQueryServiceImpl(withdrawalRepository, withdrawalService, withdrawalCommandService);
        final Resources resources = new Resources(accountRepo, withdrawalCommandService, withdrawalQueryService);

        this.javalin = Javalin.create(config -> {
            config.jsonMapper(new JavalinJackson(
                new ObjectMapper()
                    .registerModule(new Jdk8Module())
                    .registerModule(new JavaTimeModule()),
                false
            ));
            config.bundledPlugins.enableDevLogging();
            config.router.mount(resources::register);
        });
    }

    public void start(int port) {
        javalin.start(port);
    }

    public void stop() {
        javalin.stop();
    }

    public int port() {
        return javalin.port();
    }

    public static void main(String[] args) {
        final var app = new App(new WithdrawalService() {
            // TODO-MD actual Withdrawal service integration needed
            @Override
            public void requestWithdrawal(WithdrawalId id, Address address, Amount amount) {
                throw new NotImplementedError();
            }

            @Override
            public WithdrawalState getRequestState(WithdrawalId id) {
                throw new NotImplementedError();
            }
        });
        Runtime.getRuntime().addShutdownHook(new Thread(app::stop));
        app.start(8080);
    }
}
